5.4. Торке/листе
################

Некада желимо да се у сваком кораку петље користи различита вредност.
Најједноставнији начин да тако нешто постигнемо је да употребимо торку
тј. листу вредности (о чему ће бити много више речи у лекцији у којој
ћемо се бавити структурама података). Погледајмо неколико примера ове
технике.

Шарени квадрат - петља
''''''''''''''''''''''

.. questionnote::

   Допуни претходни програм тако да црта шарени квадрат, чије су боје
   страница редом црвена, зелена, плава и жута.

За решавање задатка нам је згодно да употребимо торку у којој ћемо
упамтити четири ниске које представљају називе те четири боје на
енглеском језику (такву торку можемо дефинисати помоћу ``boje =
("red", "green", "blue", "yellow")``).  У сваком кораку петље, боју
ћемо постављати на i-ти елемент те торке, где је i бројачка променљива
која редом узима вредности 0, 1, 2 и 3 (i-том елементу торке ``boje``
можемо приступити навођењем ``boje[i]``). У наредном програму опет има
неколико грешака и твој задатак је да их исправиш.

.. activecode:: корњача_шарени_квадрат
   :nocodelens:
   :enablecopy:
   :playtask:

   import turtle
   boje = ("red", "green", "", "yellow")
   for i in range(0):      # ponovi 4 puta:
       turtle.color(boje)    #   postavi boju na i-ti element torke boja
       turtle.forward(0)     #   idi napred 100 koraka
       turtle.left(0)        #   okreni se nalevo za 90 stepeni
   ====
   import turtle
   boje = ("red", "green", "blue", "yellow")
   for i in range(4):      # ponovi 4 puta:
       turtle.color(boje[i]) #   postavi boju na i-ti element torke boja
       turtle.forward(100)   #   idi napred 100 koraka
       turtle.left(90)       #   okreni se nalevo za 90 stepeni


Звезда без пресецања
''''''''''''''''''''

.. questionnote::

   Напиши програм у којем корњача црта звезду без цртања унутрашњег
   петогула, као на следећој слици.

   .. image:: ../../_images/kornjaca-zvezda.png
      :align: center

Овај задатак смо већ решавали уз помоћ гранања, али решење можемо
добити и уз помоћ двочлане листе. У листу можемо поставити углове од
72 и -144 степена и у сваком кораку се окретати улево за један од та
два угла (окрет удесно за 144 степена је једнак окрету улево за -144
степена), наизменично. Угловима из листе приступамо наизменично,
тј. приступамо угловима на позицији 0, затим 1, па 0, па 1, и тако
даље. Ово можемо остварити тако што у сваком кораку приступимо углу у
листи на позицији која се добије као остатак при дељењу променљиве
``i`` бројем два (подсетимо се, тај остатак можемо израчунати помоћу
``i % 2``).  У складу са тим исправи наредни програм.

.. activecode:: корњача_петокрака_2
   :nocodelens:
   :enablecopy:
   :playtask:

   import turtle
   uglovi = (0, 0)
   for i in range(10):          # ponovi 10 puta:
       turtle.forward(40)         #    idi napred 40 koraka
       turtle.left(uglovi[0])     #    okreni se ulevo za naredni od dva ugla iz liste
   ====
   import turtle
   uglovi = (72, -144)
   for i in range(10):          # ponovi 10 puta:
       turtle.forward(40)         #    idi napred 40 koraka
       turtle.left(uglovi[i % 2]) #    okreni se ulevo za naredni od dva ugla iz liste
