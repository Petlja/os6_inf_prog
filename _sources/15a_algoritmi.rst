Основни алгоритми - сабирање, бројање, множење, минимум, максимум
=================================================================

Током овог часа подсетићемо свега онога што си научио / научила у вези са алгоритмима. Можеш се подсетити ове лекције у `Приручнику <https://petlja.org/biblioteka/r/lekcije/prirucnik-python-gim/osnovnialgoritmi-cas15>`__.

Сабирање
---------

Обим многоугла
~~~~~~~~~~~~~~

.. questionnote::

   Напиши програм у коме се прво уноси број страница многоугла, затим
   се уносе дужине једне по једне странице и на крају се исписује обим
   тог многоугла.

Циљ овог задатка је да нас уведе у различите технике израчунавања збира неколико бројева. 
Да бисмо једноставније разумели технику која се користи за израчунавање збира бројева, олакшајмо мало задатак 
тако што ћемо уместо обима многоугла израчунавати обим троугла. Директан начин да се то уради је следећи:

.. activecode:: обим_1

   a = int(input("Unesi dužinu stranice:"))
   b = int(input("Unesi dužinu stranice:"))
   c = int(input("Unesi dužinu stranice:"))
   obim = a + b + c
   print(obim)

Ипак ово ћемо урадити другачије:

.. activecode:: обим_3

   d = int(input("Unesi dužinu stranice:"))
   obim = d
   for i in range(2):
       d = int(input("Unesi dužinu stranice:"))
       obim = obim + d
   print(obim)


Сабирање погледај даље на `линку <https://petlja.org/biblioteka/r/lekcije/prirucnik-python-gim/osnovnialgoritmi-cas15#id2>`__

Бројање
--------

Број елемената у листи
~~~~~~~~~~~~~~~~~~~~~~
.. questionnote::

   Напиши програм који израчунава број елемената листе.

Ко је добро научио лекцију о листама вероватно се сећа да се дужина листе може (и треба) израчунати помоћу уграђене функције len. Међутим, кроз овај задатак желимо да прикажемо алгоритам бројања. На почетку петље бројач елемената иницијализоваћемо на нулу, а онда ћемо у сваком кораку петље која пролази кроз елементе листе бројач увећавати за један.

.. activecode:: дужина_листе

   a = [3, 7, 4, 2, 1, 6]
   duzina = 0
   for x in a:
       duzina = duzina + 1
   print(duzina)

Бројање погледај даље на `линку <https://petlja.org/biblioteka/r/lekcije/prirucnik-python-gim/osnovnialgoritmi-cas15#id15>`__.

Множење
-------

Запремина квадра
~~~~~~~~~~~~~~~~
.. questionnote::

   Напиши програм који израчунава запремину квадра чије се дужине
   страница уносе (запремина квадра једнака је производу дужина његове
   три странице).

Овај задатак је веома сличан оном у којем се израчунавао обим троугла, једино што се уместо збира три броја захтева израчунавање производа три броја. Директно решење је зато веома слично:

.. activecode:: запремина_1

   a = int(input("Unesi dužinu stranice:"))
   b = int(input("Unesi dužinu stranice:"))
   c = int(input("Unesi dužinu stranice:"))
   zapremina = a * b * c
   print(zapremina)

Елегантније ћемо то урадити употребом петље.

.. activecode:: запремина_3

   zapremina = 1
   for i in range(3):
       d = int(input("Unesi dužinu stranice:"))
       zapremina = zapremina * d
   print(zapremina)

Множење погледај детаљније на `линку <https://petlja.org/biblioteka/r/lekcije/prirucnik-python-gim/osnovnialgoritmi-cas15#id24>`__.

Минимум, максимум
------------------

Размотримо сада проблем одређивања највећег или најмањег елемената између неколико датих бројева. Један начин да се то уради је коришћење уграђене функције min тј. max за одређивање минимума тј. максимума листе бројева.
Највиши од четири другара

.. questionnote::

   Ако су познате висине четири другара, одреди висину највишег од њих.

Решење засновано на листама и функцији за рачунање максимума листе смо већ раније видели.

.. activecode:: највећа_висина_1

   visine = [173, 171, 184, 177]
   najvisi = max(visine)
   print(najvisi)

У наставкућемо видети како да ово постигнемо и без листа и уграђених функција. Функција max се може применити на листу, међутим, могуће је применити и на више бројева. Тако смо задатак могли решити и без коришћења листе.

.. activecode:: највећа_висина_2

   najvisi = max(173, 171, 184, 177)
   print(najvisi)

Често програмски језици нуде само функцију за одређивање већег тј. мањег од два задата броја (није јој могуће навести више од два аргумента). Максимум више бројева се може свести на узастопну примену ове функције.

.. activecode:: највећа_висина_3

   najvisi = max(max(max(173, 171), 184), 177)
   print(najvisi)

Детаљније погледај у `Приручнику <https://petlja.org/biblioteka/r/lekcije/prirucnik-python-gim/osnovnialgoritmi-cas15>`__.