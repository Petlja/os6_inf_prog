11.3. Конструкција elif
#######################

Прикажимо употребу конструкције ``elif`` кроз следећи задатак.

Агрегатно стање воде
''''''''''''''''''''

.. questionnote::

   Напиши програм који за дату температуру воде (у степеним Целзијуса)
   одређује њено агрегатно стање (сматраћемо да је вода у чврстом
   стању ако јој је температура строго мања од 0, да је у течном ако
   јој је температура између 0 и 100 степени, укључујући и те границе
   и да је у гасовитом стању ако јој је температура строго већа од 100
   степени).

На основу услова задатка може се формирати програм у којем се помоћу
три провере услова независно проверава припадност температуре једном
од три интервала :math:`(-\infty , 0]`, :math:`(0, 100)` и
:math:`[100, \infty)`.

.. activecode:: агрегатно_стање_1

   temperatura = 15

   if temperatura < 0:
       stanje = "čvrsto"
   if temperatura >= 0 and temperatura <= 100:
       stanje = "tečno"
   if temperatura > 100:
       stanje = "gasovito"

Међутим, решење се може креирати и ако размишљамо на следећи начин
(тако да логички услови буду међусобно зависни):

- ако температура мања од :math:`0^{\circ}\,C` - агрегатно стање је
  чврсто;
- у противном (температура је већа или једнака :math:`0^{\circ}\,C`):
  ако је температура мања или једнака :math:`100^{\circ}\,C` (припада
  другом интервалу) - агрегатно стање je течно;
- у противном (температура је већа :math:`100^{\circ}\,C`) агрегатно
  стање је гасовито.

Такво постпуно проверавање услова се остварује помоћу **конструкције**
``elif``.
  
.. activecode:: агрегатно_стање_2
		
   temperatura = 15
   
   if temperatura < 0:
       stanje = "čvrsto"
   elif temperatura <= 100:
       stanje = "tečno"
   else:
       stanje = "gasovito"

   print(stanje)

У општем случају, општи облик ове конструкције је следећи:

.. activecode:: elif

   if uslov_1:
       naredbe
   elif uslov_2:
       naredbe
   ...
   elif uslov_k:
       naredbe
   else:
       naredbe

Прва група наредби се извршава ако је први услов испуњен, друга ако
први није испуњен а други јесте, трећа ако прва два услова нису
испуњена, а трећи јесте и тако даље, све до последње групе наредби
која се извршава ако ниједан од наведених услова није
испуњен. Приметимо да се увек извршава тачно један блок наредби у
наведеном коду.

Приметимо да је срж следећег задатка била у томе да се одреди којем од
неколико надовезаних интервала припада дата вредност (то су били
интервали :math:`(-\infty, 0)`, :math:`[0, 100]` и :math:`(100,
+\infty)`). Задаци тог облика су чести и када је таквих интервала
мало, обично се решавају конструкцијом ``elif``. И следећи задатак је
тог типа.

