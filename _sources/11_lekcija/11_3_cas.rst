11.3. Конструкција if-elif-else
#####################################

Долазимо до гранања где се појављује више од две гране. Ситуација код
оваквих примера није више да ли је услов испуњен или није, него имамо више опција.
Овакве ситуације се решавају употребом ``if-elif-else`` програмске конструкције.
Погледајмо следећи задатак.

Агрегатно стање воде
''''''''''''''''''''

.. questionnote::

   Напиши програм који за дату температуру воде (у степеним Целзијуса)
   одређује њено агрегатно стање (сматраћемо да је вода у чврстом
   стању ако јој је температура строго мања од 0, да је у течном ако
   јој је температура између 0 и 100 степени, укључујући и те границе
   и да је у гасовитом стању ако јој је температура строго већа од 100
   степени).

Приметимо да програм има нови задатак, ситуација није више или једно или друго.
Имамо три могућности сада, или је чврсто или течно или гасовито. Применимо
``if-elif-else`` да бисмо решили овај проблем.
  
.. activecode:: агрегатно_стање_2
		
   temperatura = 15
   
   if temperatura < 0:
       stanje = "čvrsto"
   elif temperatura <= 100:
       stanje = "tečno"
   else:
       stanje = "gasovito"

   print(stanje)

Размишљајмо на следећи начин:

- ако је температура мања од :math:`0^{\circ}\,C` - агрегатно стање је
  чврсто;
- у противном (ако је програм прескочио прву грану (``if``) и дошао овде већ знамо да је температура већа или једнака :math:`0^{\circ}\,C`):
  ако је температура уз то још и мања или једнака :math:`100^{\circ}\,C` - агрегатно стање je течно;
- у противном (ако програм није ушао у претходне две гране (``if`` и ``elif``) температура је сигурно већа од :math:`100^{\circ}\,C` ) -
  сада не морамо ништа да питамо, сигурни смо да је агрегатно стање гасовито.

У општем случају, општи облик ове конструкције је следећи:

.. activecode:: elif

   if uslov_1:
       naredbe
   elif uslov_2:
       naredbe
   ...
   elif uslov_k:
       naredbe
   else:
       naredbe

Прва група наредби се извршава ако је први услов испуњен, друга ако
први није испуњен а други јесте, трећа ако прва два услова нису
испуњена, а трећи јесте и тако даље, све до последње групе наредби
која се извршава ако ниједан од наведених услова није
испуњен. Приметимо да се увек извршава тачно један блок наредби а затим
више нема провера услова и програм одмах излази из конструкције.

Приметимо да је срж следећег задатка била у томе да се одреди којем од
неколико надовезаних интервала припада дата вредност (то су били
интервали :math:`(-\infty, 0)`, :math:`[0, 100]` и :math:`(100,
+\infty)`). Задаци тог облика су чести и решавају се конструкцијом 
``if-elif-else``како смо то овде описали.
