Обрада структура података коришћењем петљи
==========================================

.. topic:: На овом часу упознаћеш се са применом петљи за пролазак кроз: 
            
            - листу
            - речник

До сада смо бројачку петљу ``for`` користили само у комбинацији са функцијом ``range`` чиме смо постизали да бројачка променљива узима 
бројевне вредности из неког опсега. У овом поглављу ћемо се упознати и са другим облицима коришћења петље 
``for`` који ће нам омогућити да анализирамо један по један елемент садржан у некој структури података.

Пролазак кроз листу
-------------------

Петља ``for ... in ... :`` се може употребити и да се проће кроз све елементе неке дате торке/листе/ниске. 
На пример, ако је l листа, тада ``for i in l:`` проузрокује да променљива ``i`` узима редом елементе листе l, по један у сваком кораку. 
Подсетимо се:

.. activecode:: пролазак_кроз_листу_ос

   operativni_sistemi = ["windows", "linux", "android", "ios"]
   for sistem in operativni_sistemi:
       print(sistem)

Подсети се следећег примера:

- `Годишња доба <https://petlja.org/biblioteka/r/lekcije/prirucnik-python-gim/strukturepodataka-cas14#id6>`__

Пролазак кроз листу парова имена и презимена научника

У петљи можемо проћи и кроз све елементе листе парова.

.. questionnote::

   Ако је дата листа која садржи парове имена и презимена неколико
   научника, напиши програм који прави њихов списак тј. исписује име и
   презиме сваког од научника у посебном реду.

Формирајмо прво списак неколико научника.

.. activecode:: списак_научника

   naucnici = [("Nils", "Bor"), ("Čarls", "Darvin"), ("Isak", "Njutn"), ("Marija", "Kiri")]


Један начин да прођемо кроз листу парова је да се понашамо као да је у питању било која друга листа тј. да уведемо променљиву која ће имати редом вредности једног по једног уређеног пара. Појединачним елементима пара (имену и презимену), онда можемо да приступимо на основу индекса у оквиру пара.

.. activecode:: списак_научника_1
   :include: списак_научника

   for naucnik in naucnici:   # ispravi ovaj red
       print(naucnik[0], naucnik[1])

Слично, можемо употребити и бројачку променљиву која ће пролазити кроз индексе листе и затим сваком пару приступати на основу његовог индекса у листи, а онда сваком елементу пара (имену и презимену) приступати на основу његовог индекса у пару.

.. activecode:: списак_научника_3
   :include: списак_научника

   for i in range(len(naucnici)):
       naucnik = ???                     # ispravi ovaj red
       print(naucnik[0], naucnik[1])

Ипак, од свих, можда најелегантније решење се добија ако се употреби могућност распакивања пара, тј. коришћења две променљиве које ће редом узимате имена и презимена научника.

.. activecode:: списак_научника_2
   :include: списак_научника

   for (ime, prezime) in naucnici:
       print(ime, prezime)

Пролазак кроз речник
--------------------

Још једна структура података кроз чије елементе је могуће проћи коришћењем петље облика for ... in ... : је речник.
Површине земаља


.. questionnote::

   Ако је дат речник који садржи називе неколико земаља и њихове
   површине, напиши програм који формира списак земаља тако што за
   сваку земљу у посебном реду напише њен назив и површину (земље могу
   бити исписане у произвољном редоследу).

.. activecode:: површине_земаља

   povrsine = {"Srbija": 88361,
               "Hrvatska": 56594,
               "Crna Gora": 13812,
               "Bosna i Hercegovina": 51197,
               "Slovenija": 20273,
               "Makedonija": 25713}

Исписаћемо једну по једну земљу и њену површину.

.. activecode:: површине_земаља_1
   :include: површине_земаља

   for zemlja in povrsine:
       print("Naziv: ", zemlja, "Površina: ", povrsine[zemlja])

У претходном програму променљива zemlja редом узима вредности назива земаља (кључева у датом речнику).

Још један користан начин да се прође кроз елементе речника је да се употреби метода items() кроз чији се резултат може проћи на исти начин којим се пролази кроз све елементе листе парова.

.. activecode:: површине_земаља_2
   :include: површине_земаља

   for (zemlja, povrsina) in povrsine.items():
       print("Naziv: ", "Površina: ") # dopuni ovaj red



Све што је остало неразјашњено можеш погледати у нашем `Приручнику <https://petlja.org/biblioteka/r/lekcije/prirucnik-python-gim/strukturepodataka-cas14>`__.
