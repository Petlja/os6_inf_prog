9.1. Коришћење функција
#######################

Уграђене функције
=================

Хајде прво да погледамо наредни видео који је у вези са уграђеним функцијама, а затим детаљно прочитај све што следи и уради све питалице и задатке.

.. ytpopup:: bJ-OJZIiRdM
    :width: 735
    :height: 415
    :align: center

Појам функције
--------------
	   
**Функције** су делови програма (називају се и потпрограми) које можемо да позовемо у помоћ
када нам током програмирања затребају. Њих је неко испрограмирао и 
утиснуо у *Python* како бисмо могли да их користимо. А врло су корисне!

Касније ћемо видети како можемо и сами да направимо и користимо своју функцију, а
за почетак ћемо се само позабавити употребом готових функција 
(оне су већ ту и можемо их слободно користити тј. позивати у нашим програмима). 
У наставку ћемо детаљније описати следеће функције које су нам увек на располагању:

- ``min``, ``max`` - минимум и максимум
- ``abs`` - апсолутна вредност
- ``math.pow``, ``math.sqrt`` -  степен, квадратни корен
- ``round``, ``math.floor``, ``math.ceil`` - заокруживање реалних
  бројева
  
Минимум и максимум
------------------

У многим задацима потребно је одредити мањи или већи од два дата
броја. Пошто је тај задатак веома чест, програмски језик *Python* нуди
решење у виду функција ``min`` и ``max``. На пример, вредност израза
``min(2, 5)`` је мањи од бројева 2 и 5, тј. број 2 (тај израз
представља позив функције ``min`` са аргументима ``2`` и ``5``), док
је вредност израза ``max(2, 5)`` већи од бројева 2 и 5, тј. број 5 (тај
израз представља позив функције ``max`` са аргументима ``2`` и ``5``).

.. fillintheblank:: fill_минимум
		    
      Вредност израза ``min(24, 17)`` је |blank|

      -     :17: Тачно!
            :x: Нетачно. min означава мањи број

.. mchoice:: mchoice_минимум
   :answer_a: 2
   :answer_b: 3
   :answer_c: 5
   :correct: a
   :feedback_a: Тачно!
   :feedback_b: min означава мањи од два броја.
   :feedback_c: min означава мањи од два броја. 
		
   Која је вредност израза ``min(min(5, 2), 3)``?

Минимум и максимум неколико бројева могуће је израчунати тако што се
сви наведу као параметри функција `min`, односно `max`. На пример, вредност
израза ``max(3, 2, 5, 4)`` је ``5``.

Ево неколико задатака у чијем нам решавању ове функције могу
помоћи.

Већа оцена
''''''''''
  
.. questionnote::

   Љубица је једног дана добила оцене из биологије и географије. Која
   је оцена већа?

.. activecode:: већа_оцена

   biologija  = int(input("biologija: "))
   geografija = int(input("geografija: "))
   print("veća ocena: ", 0)  # ispravi ovu liniju

Највећи број поена у игрици
'''''''''''''''''''''''''''
   
.. questionnote::

   Асмир, Снежа и Мица су играли игрицу на рачунару. Ко је од њих освојио највећи
   број поена (*high-score*)?

.. activecode:: највећи_број_поена
   :runortest: asmir, sneza, mica, najveci
   :enablecopy:
      
   # -*- acsection: general-init -*-
   # -*- acsection: var-init -*-
   asmir = int(input("Koliko je poena osvojio Asmir: "))
   sneza = int(input("Koliko je poena osvojila Sneža: "))
   mica  = int(input("Koliko je poena osvojila Mica: "))
   # -*- acsection: main -*-
   najveci = 0 # ispravi ovu liniju
   # -*- acsection: after-main -*-
   print("Највећи број поена је: ", najveci)
   ====
   from unittest.gui import TestCaseGui
   class myTests(TestCaseGui):
       def testOne(self):
          for asmir, sneza, mica in [(3542, 2388, 4123), (3562, 4221, 1002), (7428, 2842, 9413)]:
             self.assertEqual(acMainSection(asmir = asmir, sneza = sneza, mica = mica)["najveci"],max(asmir, sneza, mica),"Ако су редом освајали %s, %s и %s поена, тада је највећи број поена %s." % (asmir, sneza, mica, max(asmir, sneza, mica)))
   myTests().main()
   



   
Апсолутна вредност
------------------

Још једна веома корисна функција коју си упознао у математици
је апсолутна вредност. Апсолутном вредношћу се одређује одступање
броја од нуле.  На пример, број 4 одступа од нуле за 4, док број -5
одступа од нуле за 5 јединица. Дакле апсолутна вредност броја
:math:`x`, која се, ако се сећаш, обележава са :math:`|x|`, једнака је
самом броју :math:`x` ако је :math:`x \geq 0`, односно броју :math:`-x`,
ако је :math:`x < 0`.

У језику *Python* апсолутну вредност можемо израчунати помоћу функције
``abs``. Тако је вредност израза ``abs(5)`` једнака ``5``, док је
вредност израза ``abs(-3)`` једнака 3.

.. fillintheblank:: fill_апсолутна_вредност
		    
      Вредност израза ``abs(-11.2)`` је |blank|

      -     :11.2: Тачно!
            :x: abs означава апсолутну вредност броја и она не може бити негативна


Једна од најзначајнијих примена апсолутне вредности јесте у случају када треба израчунати
удаљеност бројева, без обзира на њихов међусобни однос. Наиме,
растојање између бројева :math:`x_1` и :math:`x_2` је једнако
апсолутној вредности њихове разлике тј. вредности :math:`|x_1 - x_2|`,
без обзира да ли је :math:`x_1 \geq x_2` или је :math:`x_1 <
x_2`.  Хајде да погледамо наредни задатак.

Удаљеност спратова
''''''''''''''''''

.. questionnote::

   Cпратови су у једној згради обележени бројевима од -2 до 10
   (бројеви -2 и -1 означавају два нивоа испод земље, 0 означава
   приземље, док остали бројеви означавају спратове изнад земље). Ако
   се зна на којим се спратовима налазе два другара, израчунај колико
   су спратова удаљени.

Пошто не знамо да ли лифт иде ка горе или ка доле, тј. да ли је полазни
спрат мањи или већи од долазног, растојање између спратова можемо
израчунати тако што израчунамо апсолутну вредност разлике између тих
спратова. На пример, ако би први другар био на трећем спрату, а други
на првом нивоу испод приземља, исправи програм који рачуна то растојање.
   
.. activecode:: лифт_апсолутна_вредност
		
   sprat1 = 3
   sprat2 = -1
   rastojanje = abs(sprat1 - sprat2)
   print(rastojanje)

Наравно, уместо бројева 3 и -1 могуће је стављати и друге, а могуће је
ове бројеве учитати приликом покретања програма. Испробај програм са неколико
својих тест примера, а пробај и са тест примерима које смо ти ми
припремили.

.. activecode:: лифт_апсолутна_вредност_input
   :runortest: sprat1, sprat2, rastojanje
		
   # -*- acsection: general-init -*-
   # -*- acsection: var-init -*-
   sprat1 = int(input("На ком се спрату налази први другар?"))
   sprat2 = int(input("На ком се спрату налази други другар?"))
   # -*- acsection: main -*-
   rastojanje = 0 # ispravi svoj red
   # -*- acsection: after-main -*-
   print(rastojanje)
   ====
   from unittest.gui import TestCaseGui
   class myTests(TestCaseGui):
       def testOne(self):
          for sprat1, sprat2 in [(8, 4), (3, 6), (-1, 8), (4, -2)]:
             self.assertEqual(acMainSection(sprat1 = sprat1, sprat2 = sprat2)["rastojanje"],abs(sprat1-sprat2),"Растојање између спратова %s и %s је %s." % (sprat1, sprat2, abs(sprat1-sprat2)))
   myTests().main()
   
