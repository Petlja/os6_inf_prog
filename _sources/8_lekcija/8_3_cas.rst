8.3 Позициони запис бројева
###########################

Ако је укупан број центиметара био 123, тада је број метара 1, број
дециметара 2 и број центиметара 3. Решавањем претходног задатка смо
заправо одређивали појединачне цифре коришћене у запису тог
троцифреног броја. Приказана техника може бити уопштена тако да се
одређују све цифре и у запису дужих бројева.


Цифре броја
'''''''''''

.. questionnote::

   Чест начин откривања грешака при слању података је да се уз податке
   које треба послати, пошаљу и одређени контролни подаци, израчунати
   на основу самих података. Када прималац прими податке, он на основу
   примљених података поново израчунава контролне податке и упоређује
   их са контролним подацима које је примио. Ако се приликом преноса
   података, услед неких сметњи, подаци случајно измене, прималац ће
   то приметити тако што ће видети да се контролни подаци које је он
   израчунао неће поклопити са онима које је примио. Сви подаци се у
   рачунарима представљају помоћу бројева, а још од најранијег доба
   рачунарства као метода контроле коришћен је збир цифара. На пример,
   ако би податак који се шаље био број 12345, онда би се уз њега слао
   и контролни број 15 (збир 1 + 2 + 3 + 4 + 5). Ако би приликом слања
   нека цифра била случајно промењена (на пример, ако би прималац
   грешком примио број 12335) тада би се и контролни број
   највероватније разликовао (контролни број би у нашем примеру био
   14). Напиши програм који за дати петоцифрени број одређује његов
   контролни број (збир његових цифара).

.. activecode:: цифре_броја
   :runortest: broj, kontrolni_broj
   :enablecopy:
		
   # -*- acsection: general-init -*-
   # -*- acsection: var-init -*-
   broj = 12345
   # -*- acsection: main -*-
   c0 = (broj // 1) % 10
   c1 = (broj // 10) % 10
   c2 = 0 # ispravi ovaj red
   c3 = (broj // 1000) % 10
   c4 = 0 # ispravi ovaj red
   kontrolni_broj = c0 + c1 + c2 + c3 + c4
   # -*- acsection: after-main -*-
   print(kontrolni_broj)
   ====
   from unittest.gui import TestCaseGui
   class myTests(TestCaseGui):
       def testOne(self):
          for broj, kontrolni_broj in [(71425, 19), (33214, 13), (62040, 12)]:
             self.assertEqual(acMainSection(broj = broj)["kontrolni_broj"],kontrolni_broj,"За број %s контролни број је %s." % (broj, kontrolni_broj))
   myTests().main()
   

Приметимо да смо цифре броја одређивали веома слично као у претходном
задатку.  Цифре одређујемо сдесна налево, тако што делимо број са
тежином цифре (за цифру јединица број делимо са 1, десетица са 10,
стотина са 100 итд.) и проналазимо остатак при дељењу са 10.

.. infonote::

   Људи су контролу података примењивали и ручно, а сада рачунари
   обављају такве контроле у овиру прецизно задатих поступака –
   *протокола за размену података*. Иако је контролни збир
   најједноставнији начин контроле, он не може да открије грешке до
   којих може доћи услед случајне размене редоследа цифара (на пример,
   ако се уместо броја 12345 грешком пошаље број 12435, контролни збир
   оба броја ће бити исти и грешка неће бити примећена). Зато се
   уместо збира понекад користе изрази облика :math:`c_0 + 2c_1 +
   3c_2 + 4c_3 + 5c_4`. Покушај да измениш претходни програм тако да
   израчунава контролни број на овај начин.


Целобројно дељење - време и углови
----------------------------------

За разлику од бројева и јединица мере које записујемо у систему чија
је основа 10, при раду са временом и угловима користимо систем чија је
основа број 60. Тако један сат има 60 минута, а један минут 60
секунди. Слично један степен има 60 угаоних минута, а један угаони
минут има 60 угаоних секунди. Прикажимо сада кроз неколико задатака
како можемо у програмима вршити израчунавања у којима учествују време
и углови.

Конверзија сати и минута у минуте и обратно
'''''''''''''''''''''''''''''''''''''''''''

.. questionnote::

   Ако се зна колико је тренутно сати и минута, израчунај колико је
   минута протекло од претходне поноћи.

Пошто у једном сату има 60 минута, довољно је да помоножиш број сати
са 60 и на то да додаш број минута.

.. activecode:: сати_и_минути_у_минуте
   :runortest: sati, minuta, minuta_od_ponoci
   :enablecopy:

   # -*- acsection: general-init -*-
   # -*- acsection: var-init -*-
   sati = 2
   minuta = 60
   # -*- acsection: main -*-
   minuta_od_ponoci = 0 # ispravi ovaj red
   # -*- acsection: after-main -*-
   print(minuta_od_ponoci)
   ====
   from unittest.gui import TestCaseGui
   class myTests(TestCaseGui):
       def testOne(self):
          for sati, minuta, minuta_od_ponoci in [(14, 19, 859), (11, 13, 673), (23, 59, 1439)]:
             self.assertEqual(acMainSection(sati = sati, minuta = minuta)["minuta_od_ponoci"],minuta_od_ponoci,"У %s:%s протекло је %s минута од поноћи." % (sati, minuta, minuta_od_ponoci))
   myTests().main()
   
   
.. questionnote::

   Ако се зна колико је минута протекло од претходне поноћи, израчунај
   колико је тренутно сати и минута.

Ако са :math:`s` обележимо тренутни број сати, са :math:`m` тренутни
број минута, а са :math:`M` број минута протеклих од поноћи, тада важи
да је :math:`M = s \cdot 60 + m`, при чему за :math:`m` важи да је
број између :math:`0` и :math:`59`, што јасно указује на то да се
тражене вредности могу израчунати применом целобројног дељења.
   
.. activecode:: минути_у_сате_и_минуте
   :runortest: minuta_od_ponoci, sati, minuta
   :enablecopy:

   # -*- acsection: general-init -*-
   # -*- acsection: var-init -*-
   minuta_od_ponoci = 125
   # -*- acsection: main -*-
   sati = 0     # ispravi ovaj red
   minuta = 0   # ispravi ovaj red
   # -*- acsection: after-main -*-
   print(sati, minuta)
   ====
   from unittest.gui import TestCaseGui
   class myTests(TestCaseGui):
       def testOne(self):
          for sati, minuta, minuta_od_ponoci in [(14, 19, 859), (11, 13, 673), (23, 59, 1439)]:
             self.assertEqual(acMainSection(minuta_od_ponoci = minuta_od_ponoci)["sati"],sati,"У %s:%s протекло је %s минута од поноћи." % (sati, minuta, minuta_od_ponoci))
             self.assertEqual(acMainSection(minuta_od_ponoci = minuta_od_ponoci)["minuta"],minuta,"У %s:%s протекло је %s минута од поноћи." % (sati, minuta, minuta_od_ponoci))
   myTests().main()

